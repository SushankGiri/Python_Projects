import turtle
wn = turtle.Screen()
wn.title("pong")
wn.bgcolor("yellow")
wn.setup(width=800,height=600)
wn.tracer(0)
a = int(0)
b= int(0)

#paddle a

paddle_a = turtle.Turtle()
paddle_a.speed(0)
paddle_a.shape("square")
paddle_a.color("blue")
paddle_a.shapesize(stretch_wid=5,stretch_len=1)
paddle_a.penup()
paddle_a.goto(-350,0)
#paddle b
paddle_b = turtle.Turtle()
paddle_b.speed(0)
paddle_b.shape("square")
paddle_b.color("red")
paddle_b.shapesize(stretch_wid=5,stretch_len=1)
paddle_b.penup()
paddle_b.goto(350,0)

# ball
ball = turtle.Turtle()
ball.speed(0)
ball.shape("circle")
ball.color("white")
ball.penup()
ball.goto(0,0)
ball.dx= 0.2
ball.dy= 0.2

#functions
def paddle_a_up():
    y=paddle_a.ycor()
    y+=10
    paddle_a.sety(y)

def paddle_b_up():
    y=paddle_b.ycor()
    y+=10
    paddle_b.sety(y)

def paddle_b_down():
    y=paddle_b.ycor()
    y-=10
    paddle_b.sety(y)
def paddle_a_down():
    y=paddle_a.ycor()
    y-=10
    paddle_a.sety(y)

#keybinds
wn.listen()
wn.onkeypress(paddle_a_up,"w")
wn.onkeypress(paddle_a_down,"s")
wn.onkeypress(paddle_b_up,"Up")
wn.onkeypress(paddle_b_down,"Down")

# main loop
while True:
    wn.update()
    #ball move
    ball.setx(ball.xcor()+ball.dx)
    ball.sety(ball.ycor()+ball.dy)

    #wall check
     #for ball
    if (ball.ycor() > 290):
        ball.sety(290)
        ball.dy*= -1

    if (ball.ycor() < -290):
        ball.sety(-290)
        ball.dy*= -1

    if (ball.xcor() > 380):

        a = a +1
        ball.setx(0)
        ball.sety(0)
        ball.dx*= -1
        print("blue score:"+str(a))


    if (ball.xcor() < -380):
        ball.setx(0)
        ball.sety(0)
        ball.dx*= -1
        b=b+1
        print("red score:" + str(b))
    #for paddles
    if (paddle_a.ycor()<-240):
        paddle_a.sety(-240)

    if (paddle_a.ycor() > 240):
        paddle_a.sety(240)

    if (paddle_b.ycor() < -240):
        paddle_b.sety(-240)

    if (paddle_b.ycor() > 240):
        paddle_b.sety(240)

    #paddle collision
    if (((ball.xcor()>340) and (ball.xcor()<350)) and ((ball.ycor() < paddle_b.ycor()+50) and (ball.ycor()> paddle_b.ycor()-50))):
         ball.dx *= -1
         ball.color("red")

    if (((ball.xcor()<-340) and (ball.xcor()>-350)) and ((ball.ycor() < paddle_a.ycor()+50) and (ball.ycor()> paddle_a.ycor()-50))):
         ball.dx *= -1
         ball.color("blue")









